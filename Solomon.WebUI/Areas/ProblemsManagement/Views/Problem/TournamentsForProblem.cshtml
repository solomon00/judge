@model Solomon.WebUI.Areas.ProblemsManagement.ViewModels.ManageProblemsViewModel
@{
    ViewBag.Title = "Привязать турниры к задаче";
    Layout = "~/Areas/ProblemsManagement/Views/Shared/_Layout.cshtml";
}

<div id="breadcrumb">
    @Html.ActionLink("Главная", "Index", "Home", new { Area = "ProblemsManagement" }) > 
    @Html.ActionLink("Задачи", "Index", "Problem", new { page = 1, pageSize = 25, searchTerm = "", filterBy = "all", area = "ProblemsManagement" }, null) > 
    Привязать турниры к задаче
</div>

<h2>
    Привязать турниры к задаче
</h2>

<p>
    Выберите задачу для добавления в турниры.
</p>
<div class="search_wrapper">
@using (Html.BeginForm())
{
    <text>Поиск:&nbsp;</text>
    <select id="filterBy" name="filterBy">
        <option value="all" @if (Model.FilterBy == "all")
                            { <text>selected="selected"</text>}>Все</option>
        <option value="name" @if (Model.FilterBy == "name")
                             { <text>selected="selected"</text>}>Название</option>
    </select>
    @Html.TextBox("searchTerm", Model.SearchTerm) 

    <input class="button" type="submit" id="filter-button" value="Найти" />
}
</div>
<br />

@if (Model.PaginatedProblemList != null)
{
    if (Model.PaginatedProblemList.Count == 0)
    {
    <p>
        Задачи не найдены
    </p>
    }
    else
    {
    <text>Всего задач: @Model.PaginatedProblemList.TotalCount.ToString()</text>
    <div class="section_inner">
        <div class="table_wrapper">
            <div class="table_wrapper_inner">
                <table cellpadding="0" cellspacing="0" width="100%">
                    <tbody>
                        <tr>
                            <th>ID</th>
                            <th>Имя</th>
                            <th>Тип</th>
                            <th>Последнее изменение</th>
                        </tr>
                        @foreach (Solomon.Domain.Entities.Problem item in Model.PaginatedProblemList)
                        {
                            <tr>
                                <td>@item.ProblemID</td>
                                <td>@Html.ActionLink(item.Name, "BindTournamentsToProblem", "Problem", new { problemID = item.ProblemID }, null)</td>
                                <td>@item.Type</td>
                                <td>@item.LastModifiedTime</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    
	<!--[if !IE]>start pagination<![endif]-->
	<div class="pagination">
                    
		<span class="page_no">Страница @Model.PaginatedProblemList.PageIndex из @Model.PaginatedProblemList.TotalPages</span>
						
		<ul class="pag_list">
            <li>
            @if (Model.PaginatedProblemList.HasPreviousPage)
            {
                @Html.ActionLink("Первая", "Index", "Problem",
                routeValues: new
                {
                    page = 1,
                    pageSize = Model.PaginatedProblemList.PageSize,
                    searchTerm = Model.SearchTerm,
                    filterBy = Model.FilterBy
                },
                htmlAttributes: null);
            }
            else
            {
                <text>Первая</text>
            }
            </li>
			<li>
            @if (Model.PaginatedProblemList.HasPreviousPage)
            {
                @Html.ActionLink("Предыдущая", "Index", "Problem",
                routeValues: new
                {
                    page = Model.PaginatedProblemList.PageIndex - 1,
                    pageSize = Model.PaginatedProblemList.PageSize,
                    searchTerm = Model.SearchTerm,
                    filterBy = Model.FilterBy
                },
                htmlAttributes: null);
            }
            else
            {
                <text>Предыдущая</text>
            }
            </li>


            <li>
                <select id="pageIndex" name="pageIndex">
                @for (int i = 0; i < Model.PaginatedProblemList.TotalPages; i++)
                {
                    <option value="@((i + 1).ToString())" 
                        @if (Model.PaginatedProblemList.PageIndex == i + 1)
                        {<text>selected="selected"</text>}>@((i + 1).ToString())</option>
                }
                </select>
            </li>

			<li>
            @if (Model.PaginatedProblemList.HasNextPage)
            {
                @Html.ActionLink("Следующая", "Index", "Problem",
                routeValues: new
                {
                    page = Model.PaginatedProblemList.PageIndex + 1,
                    pageSize = Model.PaginatedProblemList.PageSize,
                    searchTerm = Model.SearchTerm,
                    filterBy = Model.FilterBy
                },
                htmlAttributes: null);
            }
            else
            {
                <text>Следующая</text>
            }
            </li>
            <li>
            @if (Model.PaginatedProblemList.HasNextPage)
            {
                @Html.ActionLink("Последняя", "Index", "Problem",
                routeValues: new
                {
                    page = Model.PaginatedProblemList.TotalPages,
                    pageSize = Model.PaginatedProblemList.PageSize,
                    searchTerm = Model.SearchTerm,
                    filterBy = Model.FilterBy
                },
                htmlAttributes: null);
            }
            else
            {
                <text>Последняя</text>
            }
            </li>
		</ul>

        <div id="page-size">
        Записей на странице: <select id="pageSize" name="pageSize">
        <option value="25" @if (Model.PageSize == 25)
                           {<text>selected="selected"</text>}>25</option>
        <option value="50" @if (Model.PageSize == 50)
                           {<text>selected="selected"</text>}>50</option>
        <option value="100" @if (Model.PageSize == 100)
                            {<text>selected="selected"</text>}>100</option>
        </select>
        </div>

	</div>
	<!--[if !IE]>end pagination<![endif]-->       
    }
}
<script type="text/javascript">

    $(function () {

        /**************************************************
        * Begin filterBy functions
        *
        * This will enable or disable the search field
        * if the "ViewAll" selection is chosen.
        **************************************************/

        $(document).on('change', '#filterBy', function () {
            var optionValue = $("option:selected", this).val();
            if (optionValue == "all") {
                // Clear the search field
                $("#searchTerm").val("");

                // Disable the search term field
                $("#searchTerm").attr("disabled", "disabled");
            } else {
                $("#searchTerm").removeAttr("disabled");
            }
        });


        function InitSearchField() {
            var filterByVal = $("#filterBy option:selected").val();
            if (filterByVal == "all") {
                $("#searchTerm").attr("disabled", "disabled");
            }
        }

        InitSearchField();

        /**************************************************
        * End filterBy functions
        **************************************************/


        /**************************************************
        * Begin PageIndex functions
        *
        * This handles the page index selected change functions.
        **************************************************/

        $("#pageIndex").change(function () {
            var pageIndexVal = '?page=' + $("option:selected", this).val();
            var pageSizeVal = '&pageSize=' + $("#pageSize option:selected").val();
            var filterByVal = '&filterBy=' + $("#filterBy option:selected").val();
            var searchTerm = '&searchTerm=' + '@Model.SearchTerm';
            location.href = '/ProblemsManagement/Problem/Index' + pageIndexVal + pageSizeVal + filterByVal + searchTerm;
        });

        /**************************************************
        * End PageIndex functions
        **************************************************/



        /**************************************************
        * Begin PageSize functions
        *
        * This handles the page size selected change functions.
        **************************************************/

        $("#pageSize").change(function () {
            var filterByVal = '&filterBy=' + $("#filterBy option:selected").val();
            var searchTermVal = $("#searchTerm").val();
            if (searchTermVal != '') searchTermVal = '&searchTerm=' + searchTermVal;
            var pageSizeVal = '?pageSize=' + $("option:selected", this).val();
            location.href = '/ProblemsManagement/Problem/Index' + pageSizeVal + searchTermVal + filterByVal;
        });

        /**************************************************
        * End PageSize functions
        **************************************************/


    });

</script>